name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run tests with coverage
      run: go test -v -coverprofile=coverage.out ./...

    - name: Archive code coverage report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: coverage.out

  coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      actions: read
      pull-requests: write
    # steps:
    # - uses: fgrosse/go-coverage-report@v1.2.0
    #   with:
    #     coverage-artifact-name: code-coverage
    #     coverage-file-name: coverage.out
